argo-cd:
  configs:
    # General Argo CD configuration
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
    cm:
      # -- Enable annotation tracking
      ## Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/resource_tracking/
      application.resourceTrackingMethod: annotation+label
      # -- Enable local admin user
      ## Ref: https://argo-cd.readthedocs.io/en/latest/faq/#how-to-disable-admin-user
      admin.enabled: true
      # -- Timeout to discover if a new manifests version got published to the repository
      timeout.reconciliation: 180s
      # -- Timeout to refresh application data as well as target manifests cache
      timeout.hard.reconciliation: 0s
    # Argo CD configuration parameters
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml
    params:
      # -- Create the argocd-cmd-params-cm configmap
      # If false, it is expected the configmap will be created by something else.
      create: true
      ## Controller Properties
      # -- Number of application status processors
      controller.status.processors: 20
      # -- Number of application operation processors
      controller.operation.processors: 10
      # -- Specifies timeout between application self-heal attempts
      controller.self.heal.timeout.seconds: 5
      # -- Repo server RPC call timeout seconds.
      controller.repo.server.timeout.seconds: 60

      ## Server properties
      # -- Run server without TLS
      server.insecure: true # For local dev only!
      # -- Enable GZIP compression
      server.enable.gzip: true

      ## Repo-server properties
      # -- Limit on number of concurrent manifests generate requests. Any value less the 1 means no limit.
      reposerver.parallelism.limit: 0

      # -- Enables [Applications in any namespace]
      ## List of additional namespaces where applications may be created in and reconciled from.
      ## The namespace where Argo CD is installed to will always be allowed.
      ## Set comma-separated list. (e.g. app-team-one, app-team-two)
      application.namespaces: ""
    secret:
      # -- Create the argocd-secret
      createSecret: true
      # -- Bcrypt hashed admin password
      # The password is "password" - DO NOT USE IN PRODUCTION!!
      argocdServerAdminPassword: "$2a$10$RncPyHW/B5ll2Z3J8s.IBOnbZ9uoJ4JhHLKzj5lzG/kU1KN1Oj3/K" # for local dev only!
  notifications:
    resources: {}
  applicationSet:
    resources: {}
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        selector:
          release: kube-prometheus-stack
  controller:
    resources: {}
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack
  repoServer:
    resources: {}
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack
  server:
    resources: {}
    service:
      type: NodePort
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack
argocd-apps:
  applications:
    - name: argocd-appsets
      namespace: argocd
      project: default
      source:
        repoURL: https://github.com/blakepettersson/argocd-appsets.git
        targetRevision: main
        path: .
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
        automated:
          prune: true
          selfHeal: true